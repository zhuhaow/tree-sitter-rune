===
Empty Tuple (specific syntax)
===

fn test() {
  (,)
}

---
(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple))))

===
Tuple with one integer
===

fn test() {
  (1,)
}

---

(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple
        (integer)))))

===
Tuple with multiple primitives
===

fn test() {
  ("Now", "You", "See", "Me")
}

---

(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple
        (static_string)
        (static_string)
        (static_string)
        (static_string)))))

===
Tuple with trailing comma
===

fn test() {
  (1, 2, )
}

---

(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple
        (integer)
        (integer)))))

===
Tuple with nested tuple
===

fn test() {
  ((1, 2), ("a", "b"))
}

---

(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple
        (tuple
          (integer)
          (integer))
        (tuple
          (static_string)
          (static_string))))))

===
Tuple with mixed types and trailing comma
===

fn test() {
  (false, "test", 123, (true, "nested"), )
}

---

(source_file
  (fn_declaration
    (identifier)
    (parameter_list)
    (block
      (tuple
        (boolean)
        (static_string)
        (integer)
        (tuple
          (boolean)
          (static_string))))))
